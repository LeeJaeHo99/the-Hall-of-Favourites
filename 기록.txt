idol = [
    {
        nameKo: ['카리나', '유지민'], // 활동명, 본명
        nameEn: 'karina', // 영어 이름
        group: ['aespa', '에스파'], // 그룹영어, 그룹한글
        birth: '2000년 4월 11일', // 생일
        age: 26, // 나이
        debutDate: '2020년 11월 17일', // 데뷔날
        company: 'SM', // 회사
        likeHistory: 1251615, // 누적 좋아요
        weekLike: [] // 일주일간
        todayLike: [240, 380, 456, 570, 640,], // 하루 좋아요
        victory: 24, // 우승 횟수
        song: {
            id: 'vQkdt5txAcM',
            title: 'Supernova',
        }
    }
]

group = [
    {
        nameKo: '에스파',
        nameEn: 'aespa',
        debutDate: '20-11-17',
        company: 'SM',
        member: [
            ['카리나', '윈터', '닝닝', '지젤'],
            ['karina', 'winter', 'ningning, 'gisel'],
        ],
        songId: 'vQkdt5txAcM',
    }
]

writeData
{
  "_id": {
    "$oid": ""
  },
  "title": "",
  "content": "",
  "writer": "",
  "pw": "",
  "date": "",
  "likeNum": ,
  "comment": [
    {
      "name": "",
      "text": "",
      "pw": ""
    },
  ]
}

추가 아이디어
// 토요일은 2배 이벤트하고 일요일에는 월~토까지 합친 멤버가 나옴
// 공지사항은 모달로
// 그래프 데이터는 On-Demend ISR로
// 00 ~ 05시까지는 전날꺼 절대 안보여줌

DB, API
// GPT 확인 필요

반응형, SEO

할일
// 자게 검색 빈칸시 전부 다나옴. 수정 필요.
// 검색시 페이지네이션 수정 필요.
// 멤버페이지, 그룹 페이지


// 좋아요 로직
// 00시 todayLike 빈배열의 첫번째 인덱스에 좋아요 추가
// 01시 todayLike 배열의 두번째 인덱스에 좋아요 추가
// ...
// 23시 50분에 총합 순위 1위는 메인 배경

// 23시 50분에 weekLike 빈배열의 첫번째 인덱스에 todalLike 배열의 총합 추가 후 todalLike 배열내 데이터 삭제
// weekLike배열은 월 ~ 토까지 종합하고 마지막에 다 합쳐서 제일 높은사람 일요일에 메인